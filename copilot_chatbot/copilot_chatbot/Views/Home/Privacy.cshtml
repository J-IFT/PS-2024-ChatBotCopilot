@{
    ViewData["Title"] = "Privacy Policy";
}

<div class="text-center">
    <h1 class="display-4">Bienvenue sur TerraBloom !</h1>
</div>

<div id="chat-window">
    <!-- Zone de chat -->
</div>

<h2>Discutez avec notre bot ! :)</h2>
<div id="chat-box"></div>
<input type="text" id="user-input" placeholder="Ecrire un message...">
<button class="btn-primary" onclick="sendMessage()">Envoyer</button>

<!-- Bouton d'import -->
<div id="file-upload" style="display:none;">
    <input type="file" id="file-input">
    <button onclick="uploadFile()">Importer</button>
    <span id="file-name"></span>
</div>

<!-- Bouton d'export -->
<div id="export-button" style="display:none;">
    <button class="btn-primary" onclick="exportReferences()">Exporter</button>
</div>

@section Scripts {
    <script>
        async function sendMessage() {
            var userInput = document.getElementById("user-input").value;
            document.getElementById("chat-box").innerHTML += `<p>User: ${userInput}</p>`;

            try {
                var response = await fetch('/Product/ChatWithBot', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message: userInput })
                });

                if (!response.ok) {
                    var errorData = await response.json();
                    throw new Error(errorData);
                }

                var responseData = await response.json();
                var botResponse = responseData.message;
                document.getElementById("chat-box").innerHTML += `<p>Bot: ${botResponse}</p>`;

                // Effacer le champ de texte après l'envoi du message
                document.getElementById("user-input").value = '';

                // Afficher le bouton d'import si le message est "générer"
                if (/\b(générer)\b/i.test(userInput)) {
                    document.getElementById("file-upload").style.display = "block";
                }

                if (/\b(export)\b/i.test(userInput)) {
                    document.getElementById("export-button").style.display = "block";
                }


            } catch (error) {
                console.error("Erreur lors de l'envoi du message :", error.message);
                document.getElementById("chat-box").innerHTML += `<p>Bot: Erreur lors de l'envoi du message</p>`;
            }
        }

        function uploadFile() {
            var fileInput = document.getElementById("file-input");
            var file = fileInput.files[0];
            var fileNameElement = document.getElementById("file-name");
            if (!file) {
                console.error("Aucun fichier sélectionné.");
                return;
            }
            console.log("Nom du fichier :", file.name);
            fileNameElement.textContent = file.name + " importé !";
            var formData = new FormData();
            formData.append("file", file);

            fetch('/UploadFile', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur lors de l\'importation du fichier');
                    }
                    return response.text();
                })
                .then(data => {
                    console.log(data);
                })
                .catch(error => {
                    console.error('Erreur:', error);
                });
        }

        function exportReferences() {
            fetch('/ExportReferences')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur lors de l\'exportation des références');
                    }
                    return response.blob();
                })
                .then(blob => {
                    // Créer un URL objet pour le blob
                    var url = window.URL.createObjectURL(blob);

                    // Créer un élément d'ancre pour le téléchargement
                    var a = document.createElement('a');
                    a.href = url;
                    a.download = 'references.xlsx'; // Nom du fichier à télécharger
                    document.body.appendChild(a);

                    // Clic automatique sur le lien pour déclencher le téléchargement
                    a.click();

                    // Nettoyer après le téléchargement
                    window.URL.revokeObjectURL(url);
                })
                .catch(error => {
                    console.error('Erreur:', error);
                });
        }

        // Envoyer le message lorsque la touche Entrée est pressée
        document.getElementById("user-input").addEventListener("keyup", function (event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                sendMessage();
            }
        });

    </script>
}